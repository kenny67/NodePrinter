import { User } from './users';
import { BindPrintersParam, BindPrintersResult, PrintParam, QueryTasksResult, UnbindPrinterResult, UnbindPrintersParam } from './business_types';
import { Printer, PrinterStatus, TaskPrintState } from './types';
export declare class Client {
    private _user;
    constructor(_user: User);
    bindPrinters(param: BindPrintersParam): Promise<BindPrintersResult>;
    private _parseBindResult;
    private _parseFailedResult;
    private _extractErrorMessage;
    print(param: PrintParam): Promise<string>;
    unbindPrinters(param: UnbindPrintersParam): Promise<UnbindPrinterResult>;
    private _parseUnbindResult;
    private _parseFailedUnbindResult;
    queryTaskPrintState(taskId: string): Promise<TaskPrintState>;
    queryPrinterStatus(printerSN: string): Promise<PrinterStatus>;
    queryPrinterList(sn?: string): Promise<Printer[]>;
    queryPrintTasks(request?: {
        maxReferenceDate?: Date;
        limit?: number;
        printerSn?: string;
    }): Promise<QueryTasksResult>;
    private _mapRawTaskToBisTask;
    clearPendingTasks(sn: string): Promise<string[]>;
    private _prepareRequest;
    private _validateCommonResponse;
    private _sendRequest;
}
