export enum ApiName {
    BIND_PRINTERS = 'Open_printerAddlist',
    PRINT = 'Open_printMsg',
    UNBIND_PRINTERS = 'Open_printerDelList',
    TASK_STATUS = 'Open_queryOrderState',
    PRINTER_STATUS = 'Open_queryPrinterStatus',
    QUERY_PRINTERS = 'Open_queryPrinterList',
    QUERY_TASKS = 'Open_queryTasksList',
    CLEAR_PENDING_TASKS = 'Open_delPrinterSqs',
};

export type BaseRequest = {
    user: string;
    stime: string;
    sig: string;
    apiname: string;
};

export type BindPrintersRequest = BaseRequest & {
    printerContent: string;
};

export type UnbindPrintersRequest = BaseRequest & {
    snlist: string;
};

export type PrinterStatusRequest = BaseRequest & {
    sn: string;
};

export type PrintRequest = BaseRequest & {
    sn: string;
    content: string;
    times?: number;
    expired?: number;
};

export type TaskStatusRequest = BaseRequest & {
    orderid: string;
};

export type QueryPrintersRequest = BaseRequest & {
    sn?: string;
};

export type QueryTasksRequest = BaseRequest & {
    sn?: string;
    maxReferenceTime?: string;
    limit?: number;
};

export type ClearPendingTasksRequest = BaseRequest & {
  sn: string;
};

export type Response<T> = {
    ret: number;
    msg: string;
    data: T;
};

export type BulkActionResult = {
    ok: string[];
    no: string[];
}

export type BindPrinterResponse = Response<BulkActionResult>;

export type PrintResponse = Response<string>;

export enum PrinterStatus {
    OFFLINE = '离线',
    ONELINE_WORKING = '在线，工作状态正常',
    ONLINE_WITH_EXCEPTION = '在线，工作状态不正常。'
};

export type PrinterStatusResponse = Response<PrinterStatus>;

export type UnbindPrintersResponse = Response<BulkActionResult>;

export type Printer = {
    sn: string;
    printerName: string;
    printerType: string;
    printerStatus: string;
    printerOnline: string;
};

export type QueryPrintersResponse = Response<Printer[]>;

export enum TaskPrintState {
    PRINTED = 1,
    NOT_PRINTED = 0,
};

export type TaskStatusResponse = Response<boolean>;

export type RawTask = {
    id: string;
    printerSn: string;
    state: number;
    createdAt: string;
    expiredAt?: string;
};

export type QueryTasksResponse = Response<{
    tasks: RawTask[],
    nextReferenceTime?: string;
}>;

export type ClearPendingTasksResponse = Response<string[]>;

export enum RetCode {
    SUCCESS = 0,
    INVALID_SIG_OR_TIMESTAMP = -3,
    EMPTY_REQUEST = -2,
    WRONG_REQUEST_HEADER = -2,
    UNMATCHED_PRINTER_USER_RELATION = 1002,
    INVALID_REQUEST = 1001,
}
